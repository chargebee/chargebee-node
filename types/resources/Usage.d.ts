///<reference path='./../core.d.ts'/>
///<reference path='./../index.d.ts'/>
declare module 'chargebee' {
  export interface Usage {
    

    id?:string;

    usage_date:number;

    subscription_id:string;

    item_price_id:string;

    invoice_id?:string;

    line_item_id?:string;

    quantity:string;

    source?:Source;

    note?:string;

    resource_version?:number;

    updated_at?:number;

    created_at:number;

  }
  export namespace Usage {
    export class UsageResource {  
      create(subscription_id:string, input:CreateInputParam):ChargebeeRequest<CreateResponse>;
       
      retrieve(subscription_id:string, input:RetrieveInputParam):ChargebeeRequest<RetrieveResponse>;
       
      delete(subscription_id:string, input:DeleteInputParam):ChargebeeRequest<DeleteResponse>;
       
      list(input?:ListInputParam):ChargebeeRequest<ListResponse>;
       
      pdf(input:PdfInputParam):ChargebeeRequest<PdfResponse>;
    }
    export interface CreateResponse {  
       usage:Usage;
    }
    export interface CreateInputParam {
       
      id?:string;
       
      item_price_id:string;
       
      quantity:string;
       
      usage_date:number;
       
      dedupe_option?:DedupeOption;
       
      note?:string;
    }
    export interface RetrieveResponse {  
       usage:Usage;
    }
    export interface RetrieveInputParam {
       
      id:string;
    }
    export interface DeleteResponse {  
       usage:Usage;
    }
    export interface DeleteInputParam {
       
      id:string;
    }
    export interface ListResponse {  
       list:{usage:Usage}[];
       
       next_offset?:string;
    }
    export interface ListInputParam {
      [key : string]: any;  
      /**
        * @description The number of resources to be returned.

        */
        
      limit?:number;
       
      /**
        * @description Determines your position in the list for pagination. To ensure that the next page is retrieved correctly, always set \&#x60;offset\&#x60; to the value of \&#x60;next_offset\&#x60; obtained in the previous iteration of the API call.

        */
        
      offset?:string;
       
      /**
        * @description A unique and immutable id for the usage. If not provided, it is autogenerated.

        */
        
      id?:{is?:string,is_not?:string,starts_with?:string};
       
      /**
        * @description The id of the [subscription](/docs/api/subscriptions?prod_cat_ver&#x3D;2) to which this usage record belongs.

        */
        
      subscription_id?:{is?:string,is_not?:string,starts_with?:string};
       
      /**
        * @description The time at which this usage occurred. Chargebee bills only those usages whose &#x60;usage_date&#x60; falls within a time when the subscription &#x60;status&#x60; was &#x60;active&#x60; or &#x60;non_renewing&#x60;. However, the remaining usage records are still stored and are [retrievable](/docs/api/usages?prod_cat_ver&#x3D;2#retrieve_a_usage).   
**Note:** If &#x60;usage_date&#x60; corresponds to a time already invoiced, then it is stored but never invoiced unless the [invoice is regenerated](/docs/api/subscriptions?prod_cat_ver&#x3D;2#regenerate_an_invoice).

        */
        
      usage_date?:{after?:string,before?:string,between?:string,on?:string};
       
      /**
        * @description Indicates the date at which this credit note is last updated.

        */
        
      updated_at?:{after?:string,before?:string,between?:string,on?:string};
       
      /**
        * @description The id of the [item price](/docs/api/item_prices?prod_cat_ver&#x3D;2) to which this usage belongs. The item price must be a part of the subscription or should have been part of it historically.

        */
        
      item_price_id?:{is?:string,is_not?:string,starts_with?:string};
       
      /**
        * @description When the usage has been invoiced, this is the &#x60;id&#x60; of the [invoice](/docs/api/invoices?prod_cat_ver&#x3D;2). This is cleared when the invoice is &#x60;voided&#x60; or deleted.

        */
        
      invoice_id?:{is?:string,is_not?:string,is_present?:'true' | 'false',starts_with?:string};
       
      /**
        * @description The source from which the usage record was created.

        */
        
      source?:{in?:string,is?:'admin_console' | 'api' | 'bulk_operation',is_not?:'admin_console' | 'api' | 'bulk_operation',not_in?:string};
       
      sort_by?:{asc?:'usage_date' | 'updated_at',desc?:'usage_date' | 'updated_at'};
    }
    export interface PdfResponse {  
       download:Download;
    }
    export interface PdfInputParam {
       
      invoice:{id:string};
       
      disposition_type?:DispositionType;
    }
    
  }
}